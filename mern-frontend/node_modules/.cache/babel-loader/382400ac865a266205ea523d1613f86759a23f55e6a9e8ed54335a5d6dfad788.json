{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dilip\\\\Downloads\\\\MERN-Machine-Test (1)\\\\mern-frontend\\\\src\\\\components\\\\UploadList.jsx\",\n  _s = $RefreshSig$();\n// Sample content for src/components/UploadList.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadCSV = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('csv', file);\n    try {\n      await axios.post('/api/agents/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('CSV uploaded successfully!');\n      setFile(null);\n    } catch (err) {\n      console.error('Upload error:', err);\n      alert('Failed to upload CSV.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadCSV, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadCSV","_s","file","setFile","handleFileChange","e","target","files","handleUpload","preventDefault","alert","formData","FormData","append","post","headers","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dilip/Downloads/MERN-Machine-Test (1)/mern-frontend/src/components/UploadList.jsx"],"sourcesContent":["// Sample content for src/components/UploadList.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadCSV = () => {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('csv', file);\n\n    try {\n      await axios.post('/api/agents/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      alert('CSV uploaded successfully!');\n      setFile(null);\n    } catch (err) {\n      console.error('Upload error:', err);\n      alert('Failed to upload CSV.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload CSV</h2>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UploadCSV;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI,CAACP,IAAI,EAAE;MACTQ,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEX,IAAI,CAAC;IAE5B,IAAI;MACF,MAAML,KAAK,CAACiB,IAAI,CAAC,oBAAoB,EAAEH,QAAQ,EAAE;QAC/CI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFL,KAAK,CAAC,4BAA4B,CAAC;MACnCP,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;MACnCN,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACEX,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MAAMyB,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3BpB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAACC,QAAQ,EAAEvB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}